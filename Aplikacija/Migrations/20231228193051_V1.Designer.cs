// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231228193051_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Connect4Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<int?>("WinnerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.HasIndex("WinnerID");

                    b.ToTable("Connect4Games");
                });

            modelBuilder.Entity("Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("GameTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameWinnerID")
                        .HasColumnType("int");

                    b.Property<int?>("GuessTheWordID")
                        .HasColumnType("int");

                    b.Property<int>("NumOfPlayers")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerTurnID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GameWinnerID");

                    b.HasIndex("GuessTheWordID");

                    b.HasIndex("PlayerTurnID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Models.GuessTheWordGame", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Connect4WinnerID")
                        .HasColumnType("int");

                    b.Property<int?>("WordID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Connect4WinnerID");

                    b.HasIndex("WordID");

                    b.ToTable("GuessTheWordGames");
                });

            modelBuilder.Entity("Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Models.PlayerInGame", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "PlayerID");

                    b.HasIndex("PlayerID");

                    b.ToTable("PlayerInGames");
                });

            modelBuilder.Entity("Models.Word", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Lenght")
                        .HasColumnType("int");

                    b.Property<string>("WordToGuess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Models.Connect4Game", b =>
                {
                    b.HasOne("Models.Game", null)
                        .WithMany("Connect4Games")
                        .HasForeignKey("GameID");

                    b.HasOne("Models.Player", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerID");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("Models.Game", b =>
                {
                    b.HasOne("Models.Player", "GameWinner")
                        .WithMany()
                        .HasForeignKey("GameWinnerID");

                    b.HasOne("Models.GuessTheWordGame", "GuessTheWord")
                        .WithMany()
                        .HasForeignKey("GuessTheWordID");

                    b.HasOne("Models.Player", "PlayerTurn")
                        .WithMany()
                        .HasForeignKey("PlayerTurnID");

                    b.Navigation("GameWinner");

                    b.Navigation("GuessTheWord");

                    b.Navigation("PlayerTurn");
                });

            modelBuilder.Entity("Models.GuessTheWordGame", b =>
                {
                    b.HasOne("Models.Connect4Game", "Connect4Winner")
                        .WithMany()
                        .HasForeignKey("Connect4WinnerID");

                    b.HasOne("Models.Word", "Word")
                        .WithMany()
                        .HasForeignKey("WordID");

                    b.Navigation("Connect4Winner");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("Models.PlayerInGame", b =>
                {
                    b.HasOne("Models.Game", "Game")
                        .WithMany("PlayerInGame")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Models.Game", b =>
                {
                    b.Navigation("Connect4Games");

                    b.Navigation("PlayerInGame");
                });
#pragma warning restore 612, 618
        }
    }
}
